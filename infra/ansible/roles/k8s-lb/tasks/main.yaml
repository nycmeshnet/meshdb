
- name: Install deps
  ansible.builtin.apt:
    lock_timeout: 240
    update_cache: true
    pkg:
      - ca-certificates
      - python3-pip
      - python3.11-venv
      - cron
      - iptables-persistent
      - haproxy
  become: true

- name: Install certbot
  ansible.builtin.pip:
    name: certbot==2.11.0
    virtualenv: /root/certbot_venv
    virtualenv_command: python3 -m venv
  become: true
    
- name: certbot script
  ansible.builtin.template:
    src: ../templates/certbot.sh.j2
    dest: /root/certbot.sh
    mode: "700"
  become: true

- name: dummy0 interface
  ansible.builtin.template:
    src: ../templates/netplan_dummy0.yaml.j2
    dest: /etc/netplan/dummy0.yaml
    mode: "600"
  become: true

- name: eth0 interface
  ansible.builtin.template:
    src: ../templates/netplan_50_cloud_init.yaml.j2
    dest: /etc/netplan/50-cloud-init.yaml
    mode: "600"
  become: true
  
- name: Install frr
  ansible.builtin.apt:
    update_cache: true
    pkg:
      - frr
  become: true

- name: Enable ospfd
  ansible.builtin.lineinfile:
    path: /etc/frr/daemons
    search_string: ospfd=no
    line: "ospfd=yes"
  become: true

- name: Config template frr
  ansible.builtin.template:
    src: ../templates/frr.conf.j2
    dest: /etc/frr/frr.conf
  become: true

- name: Config template haproxy
  ansible.builtin.template:
    src: ../templates/haproxy.cfg
    dest: /etc/haproxy/haproxy.cfg
  become: true

- name: Iptables rules
  ansible.builtin.template:
    src: ../templates/iptables.j2
    dest: /etc/iptables/rules.v4
  become: true

- name: Restore iptables rules
  ansible.builtin.command:
    cmd: "bash -c '/sbin/iptables-restore < /etc/iptables/rules.v4'"
  become: true

- name: Netplan apply
  ansible.builtin.command:
    cmd: "bash -c 'netplan apply && touch /tmp/netplan_applied'"
    creates: /tmp/netplan_applied
  become: true

- name: Restart and enable iptables service
  ansible.builtin.service:
    name: netfilter-persistent
    state: restarted
    enabled: true
  become: true

- name: Restart and enable frr service
  ansible.builtin.service:
    name: frr
    state: restarted
    enabled: true
  become: true

- name: Restart and enable haproxy service
  ansible.builtin.service:
    name: haproxy
    state: restarted
    enabled: true
  become: true

- name: net.ipv4.ip_forward
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    sysctl_set: true
    state: present
    reload: true
  become: true

- name: Get cert
  ansible.builtin.shell:
    cmd: /root/certbot.sh
    creates: "/etc/haproxy/ssl/{{ MESHDB_FQDN }}.pem"
  become: true

- name: Crontab
  ansible.builtin.lineinfile:
    path: /etc/cron.d/certbot_update_cert
    line: "2 1 * * 1   root    bash /root/certbot.sh 2>&1 > /dev/null"
    create: true
  become: true

- name: Restart and enable cron service
  ansible.builtin.service:
    name: cron
    state: restarted
    enabled: true
  become: true
