# This pod should NOT be scaled higher.
replicaCount: 1

image:
  repository: willnilges/meshdb
  pullPolicy: Always #IfNotPresent
  tag: "wdn-beat"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false

podAnnotations: {}
podLabels: {}

podSecurityContext:
  seccompProfile:
    type: RuntimeDefault
securityContext: {}

ingress:
  enabled: false

resources:
  limits:
    cpu: 100m
    memory: 512Mi
  #requests:
  #  cpu: 100m
  #  memory: 128Mi

containers:
  - name: celery-worker
    command:
      - sh
      - -c
      - ./celery_worker.sh
    livenessProbe:
      exec:
        # bash is needed to replace the environment variable
        command:
          - "sh"
          - "-c"
          - "python celery_liveness.py"
      initialDelaySeconds: 30  # startup takes some time
      periodSeconds: 60  # default is quite often and celery uses a lot cpu/ram then.
      timeoutSeconds: 10  # default is too low

    readinessProbe:
      exec:
        # bash is needed to replace the environment variable
        command:
          - "sh"
          - "-c"
          - "python celery_readiness.py"
      initialDelaySeconds: 30  # startup takes some time
      periodSeconds: 60  # default is quite often and celery uses a lot cpu/ram then.
      timeoutSeconds: 10  # default is too low
  - name: celery-beat
    command: 
      - sh
      - -c
      - ./celery_beat.sh

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
