# This pod should NOT be scaled higher.
replicaCount: 1

image:
  repository: willnilges/meshdb
  pullPolicy: IfNotPresent
  tag: "main"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false

podAnnotations: {}
podLabels: {}

podSecurityContext:
  seccompProfile:
    type: RuntimeDefault
securityContext: {}

ingress:
  enabled: false

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  #requests:
  #  cpu: 100m
  #  memory: 128Mi

containers:
  - name: celery-beat
    command: 
      - sh
      - -c
      - ./celery_beat.sh
  - name: celery-worker
    command:
      - sh
      - -c
      - ./celery_worker.sh

# TODO (willnilges): Come up with some clever liveness probe
livenessProbe:
  exec:
    # bash is needed to replace the environment variable
    command:
      - "sh"
      - "-c"
      - "celery inspect ping -d celery@$HOSTNAME"
  initialDelaySeconds: 30  # startup takes some time
  periodSeconds: 60  # default is quite often and celery uses a lot cpu/ram then.
  timeoutSeconds: 10  # default is too low

#readinessProbe:
#  httpGet:
#    path: /
#    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
