apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "meshdb.fullname" . }}-meshweb
  namespace: {{ .Values.meshdb_app_namespace }}
  labels:
    {{- include "meshdb.labels" . | nindent 4 }}
spec:
  replicas: 3
  selector:
    matchLabels:
      {{- include "meshdb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        admission.datadoghq.com/python-lib.version: v2.12
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: meshdb-meshweb-app
        {{- include "meshdb.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      securityContext:
        {{- toYaml .Values.meshweb.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-meshweb
          securityContext:
            {{- toYaml .Values.meshweb.securityContext | nindent 12 }}
          image: "{{ .Values.meshweb.image.repository }}:{{ .Values.meshweb.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.meshweb.port }}
              protocol: TCP
          envFrom:
            - configMapRef:
                name: meshdbconfig
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: meshdb-secrets
                  key: postgres-password
            - name: DB_PASSWORD_RO
              valueFrom:
                secretKeyRef:
                  name: meshdb-secrets
                  key: postgres-password-ro
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: meshdb-secrets
                  key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: meshdb-secrets
                  key: aws-secret-access-key
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: meshdb-secrets
                  key: smtp-password
            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: meshdb-secrets
                  key: django-secret-key
            - name: NN_ASSIGN_PSK
              valueFrom:
                secretKeyRef:
                  name: meshdb-secrets
                  key: nn-assign-psk
            - name: QUERY_PSK
              valueFrom:
                secretKeyRef:
                  name: meshdb-secrets
                  key: query-psk
            - name: PANO_GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: meshdb-secrets
                  key: pano-github-token
            - name: UISP_PASS
              valueFrom:
                secretKeyRef:
                  name: meshdb-secrets
                  key: uisp-pass
            - name: SLACK_ADMIN_NOTIFICATIONS_WEBHOOK_URL
              valueFrom:
                secretKeyRef:
                  name: meshdb-secrets
                  key: slack-webhook
            - name: SLACK_JOIN_REQUESTS_CHANNEL_WEBHOOK_URL
              valueFrom:
                secretKeyRef:
                  name: meshdb-secrets
                  key: slack-join-webhook
            - name: OSTICKET_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: meshdb-secrets
                  key: osticket-api-token
            - name: RECAPTCHA_SERVER_SECRET_KEY_V2
              valueFrom:
                secretKeyRef:
                  name: meshdb-secrets
                  key: recaptcha-v2-secret
            - name: RECAPTCHA_SERVER_SECRET_KEY_V3
              valueFrom:
                secretKeyRef:
                  name: meshdb-secrets
                  key: recaptcha-v3-secret
          volumeMounts:
            - name: static-content-vol
              mountPath: /opt/meshdb/static
          {{ if eq .Values.meshweb.liveness_probe "true" }}
          livenessProbe:
           exec:
             command:
               - curl
               - http://127.0.0.1:{{ .Values.meshweb.port }}/api/v1
           periodSeconds: 3
           initialDelaySeconds: 4
           timeoutSeconds: 3
           {{ end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.meshweb.resources | nindent 12 }}
      volumes:
        - name: static-content-vol
          persistentVolumeClaim:
            claimName: {{ .Values.meshweb.static_pvc_name }}
      {{- with .Values.meshweb.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.meshweb.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.meshweb.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
