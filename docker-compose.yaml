services:
  postgres:
    container_name: meshdb-postgres-1
    healthcheck:
      test: pg_isready -U ${DB_USER}
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 5s
    networks:
      - api
    ports:
      - 5432:5432
    image: docker.io/postgres:15-bookworm
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  redis:
    container_name: meshdb-redis-1
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 3s
      timeout: 3s
      retries: 3
      start_period: 1s
    networks:
      - api
    image:
      redis
    ports:
      - 6379:6379

  pelias:
    container_name: meshdb-pelias-1
    networks:
      - api
    ports:
      - 6800:3000
    image: pelias/parser

  meshdb:
    container_name: meshdb-meshdb-1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
         condition: service_healthy
    healthcheck:
      test: curl http://127.0.0.1:8081/api/v1
      interval: 3s
      timeout: 3s
      retries: 3
      start_period: 4s
    networks:
      - api
    env_file:
      - .env
    volumes:
      - static_files:/opt/meshdb/static
      - meshdb_logs:/var/log/meshdb
    image: willnilges/meshdb:main
    build:
      context: .
      dockerfile: ./Dockerfile

  nginx:
    container_name: meshdb-nginx-1
    depends_on:
      meshdb:
        condition: service_healthy
    networks:
      - api
    expose:
      - 80
    # Useful for debugging, but should be commented out otherwise.
    #ports:
    #  - 80:80
    #  - 443:443
    image: nginx
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - static_files:/var/www/html/static

  minio:
    container_name: meshdb-minio-1
    image: quay.io/minio/minio
    ports:
      - '9000:9000'
      - '9001:9001'
    #networks:
    #  - api
    volumes:
      - 'minio_data:/data'
    command: |
      server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=sampleaccesskey
      - MINIO_ROOT_PASSWORD=samplesecretkey
      - MINIO_DEFAULT_BUCKETS=meshdb-join-form-log

  # I hate computers: https://github.com/minio/minio/issues/4769
  createbuckets:
    container_name: meshdb-createbuckets-1
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 sampleaccesskey samplesecretkey;
      /usr/bin/mc mb myminio/meshdb-join-form-log;
      exit 0;
      "

volumes:
  postgres_data:
  static_files:
  meshdb_logs:
  minio_data:

networks:
  api:
    external: $COMPOSE_EXTERNAL_NETWORK
    name: $COMPOSE_NETWORK_NAME
