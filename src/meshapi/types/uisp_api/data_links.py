# Auto-generated by ChatGPT from the UISP API Swagger file available here
# https://uisp.mesh.nycmesh.net/nms/api-docs/swagger.json
# with small manual tweaks to correct its mistakes. If these are wrong feel free to @ me.
# In particular I think the UISP devs phoned it in on their documentation for what
# fields are required, so lots of stuff that's probably always there
# is marked NotRequired

from typing import Dict, Literal, NotRequired, TypedDict

from meshapi.types.uisp_api.literals import RoleLiteral

# This one has to be different, because from is a reserved keyword in python
DataLink = TypedDict(
    "DataLink",
    {
        "canDelete": bool,
        "devicesDistance": NotRequired[float],
        "frequency": float,
        "id": str,
        "from": NotRequired["From"],
        "origin": Literal["unms", "manual"],
        "signal": float,
        "sitesDistance": NotRequired[float],
        "ssid": str,
        "state": NotRequired[Literal["active", "disabled", "disconnected", "proposed"]],
        "to": NotRequired["To"],
        "type": NotRequired[Literal["ethernet", "pon", "wireless"]],
    },
)


class From(TypedDict):
    device: NotRequired["DataLinkDevice"]
    interface: NotRequired[Dict]
    site: NotRequired["DataLinkSite"]


class To(TypedDict):
    device: NotRequired["DataLinkDevice1"]
    interface: NotRequired[Dict]
    site: NotRequired["DataLinkSite1"]


class Antenna(TypedDict):
    gain: NotRequired[float]
    name: NotRequired[str]


class LinkScore(TypedDict):
    linkScore: NotRequired[float]


class Parent(TypedDict):
    id: NotRequired[str]
    name: NotRequired[str]
    parent: NotRequired[str]
    status: NotRequired[str]
    type: NotRequired[str]


class Identification(TypedDict):
    id: NotRequired[str]
    name: NotRequired[str]
    parent: NotRequired["Parent"]
    status: NotRequired[str]
    type: NotRequired[str]


class Identification1(TypedDict):
    authorized: bool
    category: str
    displayName: str
    firmwareVersion: NotRequired[str]
    id: str
    ipAddress: NotRequired[str]
    mac: NotRequired[str]
    model: str
    name: str
    platformId: NotRequired[str]
    role: RoleLiteral
    serialNumber: NotRequired[str]
    siteId: NotRequired[str]
    type: str
    updated: NotRequired[float]


class DataLinkSite(TypedDict):
    identification: Identification


class DataLinkSite1(TypedDict):
    identification: NotRequired[Identification]


class DataLinkDevice(TypedDict):
    attributes: Dict
    frequency: NotRequired[float]
    identification: NotRequired[Identification1]
    meta: NotRequired[Dict]
    overview: NotRequired["Overview"]
    signal: NotRequired[float]
    ssid: NotRequired[str]
    status: str


class DataLinkDevice1(TypedDict):
    attributes: NotRequired[Dict]
    frequency: NotRequired[float]
    identification: NotRequired[Identification1]
    meta: NotRequired[Dict]
    overview: NotRequired["Overview"]
    signal: NotRequired[float]
    ssid: NotRequired[str]
    status: str


class Overview(TypedDict):
    antenna: NotRequired["Antenna"]
    channelWidth: NotRequired[float]
    downlinkCapacity: NotRequired[float]
    downlinkUtilization: NotRequired[float]
    linkScore: NotRequired["LinkScore"]
    mcsIndex: NotRequired[float]
    modulation: NotRequired[str]
    signal: NotRequired[float]
    stationsCount: NotRequired[float]
    uplinkCapacity: NotRequired[float]
    uplinkUtilization: NotRequired[float]
    wirelessMode: NotRequired[
        Literal[
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh",
        ]
    ]
