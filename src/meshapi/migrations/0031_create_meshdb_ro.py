# Generated by Django 4.2.15 on 2024-09-18 01:53

import os
from django.db import migrations


class Migration(migrations.Migration):
    dependencies = [
        ("meshapi", "0030_merge_20240916_1938"),
    ]

    @staticmethod
    def create_meshdb_ro(apps, schema_editor):
        with schema_editor.connection.cursor() as cursor:

            db_password_ro = os.environ.get("DB_PASSWORD_RO")
            if not db_password_ro:
                raise ValueError("Could not create meshdb_ro postgres role! Please set the DB_PASSWORD_RO environment variable.")

            # Role for meshdb_ro

            # Create the read-only user with a password
            cursor.execute(f"CREATE USER meshdb_ro WITH PASSWORD '{db_password_ro}';")

            # Grant SELECT on tables we want the readonly to access 
            cursor.execute("""
            GRANT SELECT ON ALL TABLES IN SCHEMA public TO meshdb_ro
            """)
            
            # Ensure the user gets SELECT permission on future tables
            cursor.execute("""
            ALTER DEFAULT PRIVILEGES IN SCHEMA public
            GRANT SELECT ON TABLES TO meshdb_ro;
            """)

    @staticmethod
    def drop_meshdb_ro(apps, schema_editor):
        with schema_editor.connection.cursor() as cursor:
            cursor.execute("DROP USER IF EXISTS meshdb_ro;")

    operations = [
        migrations.RunPython(create_meshdb_ro, reverse_code=drop_meshdb_ro),
    ]
